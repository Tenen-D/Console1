Синтаксический разбор значений из строковых данных

Типы  данных  .NET  предоставляют  возможность  генерировать  переменную  заданного 
типа  на  основе  текстового  эквивалента  (т.е.  выполнять  синтаксический  разбор).  Этот 
прием  может  оказаться  исключительно  полезным  при  преобразовании  некоторых  вво­
димых  пользователем  данных  (например,  результата  выбора  в  раскрывающемся  списке 
внутри  графического  пользовательского  интерфейса)  в  числовые  значения.  Ниже  при­
веден пример метода ParseFromStrings() с логикой синтаксического разбора:

static void ParseFromStrings()
{
Console.WriteLine("=> Data type parsing:");
bool b = bool.Parse("True");
Console.WriteLine("Value of b: {0}", b);
double d = double.Parse("99,884");
Console.WriteLine("Value of d: {0}", d);            Parse???
int i = int.Parse("8");
Console.WriteLine("Value of i: {0}", i);
char c = Char.Parse("w");
Console.WriteLine("Value of c: {0}", c);
Console.WriteLine();
}

______________________________________________________________________________________
_______________________________________________________________________________________
______________________________________________________________________________________


закон  неизменяемости  строк  действует  и  при  использовании  в 
C#  операции  присваивания.  В  целях  иллюстрации  реализуем  следующий  метод 

StringsAreImmutable2():
	static void StringsAreImmutable2()
	{
		string s2 = "My other string";
		s2 = "New string value";
	}

Скомпилируем  приложение  и  загрузим  результирующую  сборку  в  утилиту 
ildasm.exe  (см.  главу  1).  Ниже  показан  CIL-код,  который  будет  сгенерирован  для  мето­
да StringsAreImmutable2():
.method private hidebysig static void StringsAreImmutable2() cil managed
{
// Code size  14 (0xe)
.maxstack 1
.locals init ([0] string s2)
IL_0000:  nop
IL_0001: ldstr  "My other string"
IL_0006:  stloc.0
IL_0007: ldstr  "New string value"
IL_000c:  stloc.0
IL_000d:  ret
} // end of method Program::StringAreImmutable2
Хотя  низкоуровневые  детали  CIL  пока  подробно  не  рассматривались,  обратите  вни­
мание  на  многочисленные  вызовы  кода  операции  ldstr  (загрузка  строки).  Код  операции
ldstr  в  CIL  загружает  новый  объект  string  в  управляемую  кучу.  Предыдущий  объект
string,  который  содержал  значение  "Му  other  string",  будет  в  конечном  итоге  удален
сборщиком мусора.

_____________________________________________________________________________________________
_______________________________________________________________________________________________
______________________________________________________________________________________________

Чим масив відрізняється від "перечисления" (Enum)??
__________________________________________________________
________________________________________________________
_____________________________________________________